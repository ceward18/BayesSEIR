// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getS
Rcpp::NumericVector getS(int S0, Rcpp::NumericVector Estar);
RcppExport SEXP _BayesSEIR_getS(SEXP S0SEXP, SEXP EstarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Estar(EstarSEXP);
    rcpp_result_gen = Rcpp::wrap(getS(S0, Estar));
    return rcpp_result_gen;
END_RCPP
}
// getE
Rcpp::NumericVector getE(int E0, Rcpp::NumericVector Estar, Rcpp::NumericVector Istar);
RcppExport SEXP _BayesSEIR_getE(SEXP E0SEXP, SEXP EstarSEXP, SEXP IstarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type E0(E0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Estar(EstarSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Istar(IstarSEXP);
    rcpp_result_gen = Rcpp::wrap(getE(E0, Estar, Istar));
    return rcpp_result_gen;
END_RCPP
}
// getI
Rcpp::NumericVector getI(int I0, Rcpp::NumericVector Istar, Rcpp::NumericVector Rstar);
RcppExport SEXP _BayesSEIR_getI(SEXP I0SEXP, SEXP IstarSEXP, SEXP RstarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type I0(I0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Istar(IstarSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type Rstar(RstarSEXP);
    rcpp_result_gen = Rcpp::wrap(getI(I0, Istar, Rstar));
    return rcpp_result_gen;
END_RCPP
}
// colByVec
arma::vec colByVec(arma::mat x, arma::vec y);
RcppExport SEXP _BayesSEIR_colByVec(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(colByVec(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BayesSEIR_getS", (DL_FUNC) &_BayesSEIR_getS, 2},
    {"_BayesSEIR_getE", (DL_FUNC) &_BayesSEIR_getE, 3},
    {"_BayesSEIR_getI", (DL_FUNC) &_BayesSEIR_getI, 3},
    {"_BayesSEIR_colByVec", (DL_FUNC) &_BayesSEIR_colByVec, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_BayesSEIR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
